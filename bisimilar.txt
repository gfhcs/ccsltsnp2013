bisimulation' B s t :=

0. if (s, t) in B then return B
1. B += {(s, t)}
2. for all edges s -a-> s'
	  if internal a then
		B' := bisimulation' B s' t
		if B <> {} then B += B'
		else return {}
	  else
		for all edges t -a-> t'.
			B' := bisimulation' B s' t'
			if B' <> {}
				B += B'
				break
3. for all edges t -a-> t'
	  if internal a then
		B' := bisimulation' B s t'
		if B <> {} then B += B'
		else return {}
	  else
		for all edges s -a-> s'.
			B' := bisimulation' B s' t'
			if B' <> {}
				B += B'
				break
3. return B


I should also include:

	B is a bijective bisimulation of P and Q <=> S isomorphous to Q